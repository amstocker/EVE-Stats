window.addEvent('domready', function() {

	searchRequest = function () {
		var search_url, grabber, query = document.location.search;
		if (query.length>0) {
			if (query.substring(0,7) == "?entity") {
				var info = query.substring(8,query.length-1).split(',');
				search_url = info[0]+'/'+info[1];
				grabber = function (response) {showEntity(info[0], response)};
			} else {
				search_url = 'search'+query.substring(0,query.length-1);
				grabber = showSearchResults;
			};
		} else {
			search_url = 'search?q=';
			grabber = showSearchResults;
		};
		if ($('table')) {$('table').empty()};
		$('subtitle').setStyle('display', 'none');
		$('loading').setStyle('display', 'block');
		var xhr = new XMLHttpRequest();
		xhr.onload = function() {
			if (xhr.status == 200) {
				grabber(xhr.response);
			};
		};
		xhr.open('GET', 'http://api.whelp.gg/'+search_url);
		xhr.responseType = 'json';
		xhr.send()
	};
	
	
	showSearchResults = function(results) {
		table = $('table');
		Object.each(results, function(list, key) {
			if (!list.length)
				return;
			var div = new Element('div').grab(
				new Element('b', {html: key[0].toUpperCase() + key.substr(1)})
			);
			div.grab( new Element('br') );
			var key_singular = key.substr(0, key.length-1)
			var name_key = key_singular + '_name';
			var id_key = key_singular + '_id';
			list.each(function(entity) {
				if (entity[name_key]!="") {
					div.adopt(
						new Element('a', {
							'href': '/?entity='+key_singular+','+entity[id_key],
							'html': entity[name_key],
							'styles': {color: '#00f'},
						}),
						new Element('br')
					);
				};
			});
			table.grab(div);
		});
		$('loading').setStyle('display', 'none');
		$('subtitle').setStyle('display', 'block');
		$('subtitle').set('html', 'Search Results:');
	};
	
	
	showEntity = function (entity_key, response) {

		var recentKills = new Element('div', {id: 'recentKills'});
		recentKills.grab( new Element('b', {html: 'Recent Kills'}) );
		response['kills'].each( function(kill) {
			var row = new Element('div', {styles: {'padding':'0px'}});
			var victim = kill['victim'], finalblow = kill['final_blow'];
			var victimColor = '#f00', finalblowColor = '#093';
			var rowheader = new Element('div', {
				'class': 'unselectable unselectedKill',
				styles: {'margin':'0px', 'padding':'4px'}
			});
			
			rowheader.grab( new Element('span', {styles:{color:'#06f'}, html: kill['kill_time']}) );
			rowheader.appendText(' :: ');
			
			if (victim['character_name']!="") {var victimname=victim['character_name']} else {var victimname='???'};
			if (finalblow['character_name']!="") {var finalblowname=finalblow['character_name']} else {var finalblowname='???'};
			
			if (victim[entity_key+'_name']!=response['stats'][entity_key+'_name']) {
				rowheader.grab( new Element('span', {styles: {color: finalblowColor}, html: finalblowname}) );
				rowheader.appendText(' > ');
				rowheader.grab( new Element('span', {styles: {color: victimColor}, html: victimname}) );
			} else {
				rowheader.grab( new Element('span', {styles: {color: victimColor}, html: victimname}) );
				rowheader.appendText(' < ');
				rowheader.grab( new Element('span', {styles: {color: finalblowColor}, html: finalblowname}) );
			};
			row.grab(rowheader);
			
			var info = new Element('div', {styles: {'display': 'none'}});
			
			info.appendText('TEST');
			
			
			row.adopt(info);
			rowheader.addEvent('click', function(event) {
				if (info.getStyle('display')=='none') {
					info.setStyle('display', 'block');
				} else {
					info.setStyle('display', 'none');
				};
			});
			recentKills.grab(row);
		});
		
		var killsPlot = new Element('canvas', {'id':'canvas'});
		
		
		$('table').grab(killsPlot);
		$('table').grab(recentKills);
		
		$('loading').setStyle('display', 'none');
		$('subtitle').setStyle('display', 'block');
		$('subtitle').set('html', entity_key.toUpperCase()+': '+response['stats'][entity_key+'_name']);
	};
	
	
	(function () {
		var xhr = new XMLHttpRequest();
		xhr.onload = function() {
			if (xhr.status == 200) {
				window.ITEM_LOOKUP = {};
				
				var typeids = xhr.responseText.split(/\n/g);
				typeids.each( function(line) {
					line = line.split(/[^\S\r\n]{2,}/);
					var item_id = line[0], item_name = line[1];
					ITEM_LOOKUP[item_id] = item_name;
				});
			};
		};
		xhr.open('GET', '/js/typeid.txt')
		xhr.send()
		searchRequest();
	})();
	

});


